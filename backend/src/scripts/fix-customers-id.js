// Script to fix customers.id column in PostgreSQL
// Run with: node src/scripts/fix-customers-id.js

require('dotenv').config();
const { Pool } = require('pg');

// Create a connection to the database
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: { rejectUnauthorized: false }
});

async function fixCustomersIdColumn() {
  const client = await pool.connect();
  
  try {
    console.log('🔍 Checking customers table structure...');
    
    // Check if customers table exists
    const tableCheck = await client.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'customers'
      );
    `);
    
    if (!tableCheck.rows[0].exists) {
      console.log('❌ Customers table does not exist!');
      return;
    }
    
    // Check if id column has IDENTITY or sequence
    const columnCheck = await client.query(`
      SELECT is_identity, column_default 
      FROM information_schema.columns 
      WHERE table_schema = 'public' 
      AND table_name = 'customers' 
      AND column_name = 'id';
    `);
    
    if (columnCheck.rows.length === 0) {
      console.log('❌ id column not found in customers table!');
      return;
    }
    
    const isIdentity = columnCheck.rows[0].is_identity === 'YES';
    const hasSequence = columnCheck.rows[0].column_default && 
                        columnCheck.rows[0].column_default.includes('nextval');
    
    console.log('Current status:');
    console.log(`- is_identity: ${isIdentity ? 'YES' : 'NO'}`);
    console.log(`- has_sequence: ${hasSequence ? 'YES' : 'NO'}`);
    console.log(`- column_default: ${columnCheck.rows[0].column_default || 'NULL'}`);
    
    if (isIdentity || hasSequence) {
      console.log('✅ customers.id already has auto-increment configured');
      return;
    }
    
    // Fix the column by adding IDENTITY
    console.log('🔧 Adding IDENTITY to customers.id column...');
    
    // Start a transaction
    await client.query('BEGIN');
    
    try {
      // Add IDENTITY to the column
      await client.query(`
        ALTER TABLE customers 
        ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;
      `);
      
      // Commit the transaction
      await client.query('COMMIT');
      console.log('✅ Successfully added IDENTITY to customers.id column');
      
      // Verify the change
      const verifyCheck = await client.query(`
        SELECT is_identity, column_default 
        FROM information_schema.columns 
        WHERE table_schema = 'public' 
        AND table_name = 'customers' 
        AND column_name = 'id';
      `);
      
      console.log('Updated status:');
      console.log(`- is_identity: ${verifyCheck.rows[0].is_identity === 'YES' ? 'YES' : 'NO'}`);
      console.log(`- column_default: ${verifyCheck.rows[0].column_default || 'NULL'}`);
      
    } catch (err) {
      // Rollback in case of error
      await client.query('ROLLBACK');
      console.error('❌ Error fixing customers.id column:', err.message);
    }
    
  } catch (err) {
    console.error('❌ Database error:', err.message);
  } finally {
    client.release();
    pool.end();
  }
}

// Run the function
fixCustomersIdColumn().catch(err => {
  console.error('❌ Unhandled error:', err);
  process.exit(1);
});